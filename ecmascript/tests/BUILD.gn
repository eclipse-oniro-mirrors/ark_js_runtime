# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//ark/js_runtime/js_runtime_config.gni")
import("//ark/js_runtime/test/test_helper.gni")
import("//build/test.gni")

module_output_path = "ark/js_runtime"

host_unittest_action("AssertScopeTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "assert_scope_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("BuiltinsTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "builtins_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("DumpTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "dump_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("EcmaModuleTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ecma_module_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("EcmaStringTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ecma_string_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("GlueRegsTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "glue_regs_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsArrayIteratorTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_array_iterator_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsArrayTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_array_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsDataViewTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_dataview_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsDateTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_date_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsForinIteratorTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_forin_iterator_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsFunctionTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_function_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsHandleTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_handle_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsIteratorTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_iterator_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]
  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsMapTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_map_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JSAPITreeMapTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_api_tree_map_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JSAPITreeSetTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_api_tree_set_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsObjectTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_object_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsPrimitiveRefTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_primitive_ref_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsPromiseTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_promise_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsProxyTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_proxy_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsSetTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_set_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsSymbolTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_symbol_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsTaggedQueueTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_tagged_queue_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsTypedArrayTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_typed_array_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsVerificationTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_verification_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("TaggedTreeTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "tagged_tree_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("HugeObjectTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "huge_object_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsArgumentsTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_arguments_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("LexicalEnvTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "lexical_env_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("LinkedHashTableTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "linked_hash_table_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("NameDictionaryTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "name_dictionary_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("NativePointerTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "native_pointer_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("ObjectFactoryTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "object_factory_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("SymbolTableTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "symbol_table_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("TaggedValueTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "tagged_value_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("MemControllerTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "mem_controller_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("WeakRefGenGcTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "weak_ref_gen_gc_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("WeakRefStwGcTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "weak_ref_stw_gc_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("JsSerializerTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_serializer_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("GcTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "concurrent_sweep_test.cpp",
    "gc_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("ConcurrentMarkingTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "concurrent_marking_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

group("unittest") {
  testonly = true

  # deps file
  deps = [
    ":AssertScopeTest",
    ":BuiltinsTest",
    ":ConcurrentMarkingTest",
    ":DumpTest",
    ":EcmaModuleTest",
    ":EcmaStringTest",
    ":GcTest",
    ":GlueRegsTest",
    ":HugeObjectTest",
    ":JSAPITreeMapTest",
    ":JSAPITreeSetTest",
    ":JsArgumentsTest",
    ":JsArrayIteratorTest",
    ":JsArrayTest",
    ":JsDataViewTest",
    ":JsDateTest",
    ":JsForinIteratorTest",
    ":JsFunctionTest",
    ":JsHandleTest",
    ":JsIteratorTest",
    ":JsMapTest",
    ":JsObjectTest",
    ":JsPrimitiveRefTest",
    ":JsPromiseTest",
    ":JsProxyTest",
    ":JsSerializerTest",
    ":JsSetTest",
    ":JsSymbolTest",
    ":JsTaggedQueueTest",
    ":JsTypedArrayTest",
    ":JsVerificationTest",
    ":LexicalEnvTest",
    ":LinkedHashTableTest",
    ":NameDictionaryTest",
    ":NativePointerTest",
    ":ObjectFactoryTest",
    ":SymbolTableTest",
    ":TaggedTreeTest",
    ":TaggedValueTest",
    ":WeakRefGenGcTest",
    ":WeakRefStwGcTest",
  ]
}

group("host_unittest") {
  testonly = true

  # deps file
  deps = [
    ":AssertScopeTestAction",
    ":BuiltinsTestAction",
    ":ConcurrentMarkingTestAction",
    ":DumpTestAction",
    ":EcmaModuleTestAction",
    ":EcmaStringTestAction",
    ":GcTestAction",
    ":GlueRegsTestAction",
    ":HugeObjectTestAction",
    ":JSAPITreeMapTestAction",
    ":JSAPITreeSetTestAction",
    ":JsArgumentsTestAction",
    ":JsArrayIteratorTestAction",
    ":JsArrayTestAction",
    ":JsDataViewTestAction",
    ":JsDateTestAction",
    ":JsForinIteratorTestAction",
    ":JsFunctionTestAction",
    ":JsHandleTestAction",
    ":JsIteratorTestAction",
    ":JsMapTestAction",
    ":JsObjectTestAction",
    ":JsPrimitiveRefTestAction",
    ":JsPromiseTestAction",
    ":JsProxyTestAction",
    ":JsSerializerTestAction",
    ":JsSetTestAction",
    ":JsSymbolTestAction",
    ":JsTaggedQueueTestAction",
    ":JsTypedArrayTestAction",
    ":JsVerificationTestAction",
    ":LexicalEnvTestAction",
    ":LinkedHashTableTestAction",
    ":NameDictionaryTestAction",
    ":NativePointerTestAction",
    ":ObjectFactoryTestAction",
    ":SymbolTableTestAction",
    ":TaggedTreeTestAction",
    ":TaggedValueTestAction",
    ":WeakRefGenGcTestAction",
    ":WeakRefStwGcTestAction",
  ]
}
