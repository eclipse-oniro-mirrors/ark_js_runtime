# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//ark/js_runtime/js_runtime_config.gni")
import("//ark/js_runtime/test/test_helper.gni")
import("//build/test.gni")

module_output_path = "ark/js_runtime"

host_unittest_action("ICBinaryOpTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ic_binaryop_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("ICCompareOpTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ic_compareop_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("ICHandlerTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ic_handler_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

host_unittest_action("ICInvokeTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ic_invoke_test.cpp",
  ]

  configs = [
    "//ark/js_runtime:ecma_test_config",
    "//ark/js_runtime:ark_jsruntime_public_config",  # should add before
                                                     # arkruntime_public_config
    "//ark/js_runtime:ark_jsruntime_common_config",
    "$ark_root/runtime:arkruntime_public_config",
  ]

  deps = [
    "$ark_root/libpandabase:libarkbase",
    "//ark/js_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  if (!is_standard_system) {
    deps += [ "$ark_root/runtime:libarkruntime" ]
  }
}

group("unittest") {
  testonly = true

  # deps file
  deps = [
    ":ICBinaryOpTest",
    ":ICCompareOpTest",
    ":ICHandlerTest",
    ":ICInvokeTest",
  ]
}

group("host_unittest") {
  testonly = true

  # deps file
  deps = [
    ":ICBinaryOpTestAction",
    ":ICCompareOpTestAction",
    ":ICHandlerTestAction",
    ":ICInvokeTestAction",
  ]
}
